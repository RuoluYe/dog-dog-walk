{"ast":null,"code":"const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\nexport const VALIDATOR_REQUIRE = () => ({\n  type: VALIDATOR_TYPE_REQUIRE\n});\nexport const VALIDATOR_FILE = () => ({\n  type: VALIDATOR_TYPE_FILE\n});\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({\n  type: VALIDATOR_TYPE_MIN,\n  val: val\n});\nexport const VALIDATOR_MAX = val => ({\n  type: VALIDATOR_TYPE_MAX,\n  val: val\n});\nexport const VALIDATOR_EMAIL = () => ({\n  type: VALIDATOR_TYPE_EMAIL\n});\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","map":{"version":3,"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MIN","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_FILE","VALIDATOR_REQUIRE","type","VALIDATOR_FILE","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_MIN","VALIDATOR_MAX","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test"],"sources":["C:/Users/yeruo/OneDrive - UW/Desktop/free-dog-walk/frontend/src/shared/util/validators.js"],"sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n\n  return isValid;\n};\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,SAAS;AACxC,MAAMC,wBAAwB,GAAG,WAAW;AAC5C,MAAMC,wBAAwB,GAAG,WAAW;AAC5C,MAAMC,kBAAkB,GAAG,KAAK;AAChC,MAAMC,kBAAkB,GAAG,KAAK;AAChC,MAAMC,oBAAoB,GAAG,OAAO;AACpC,MAAMC,mBAAmB,GAAG,MAAM;AAElC,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,MAAO;EAAEC,IAAI,EAAER;AAAuB,CAAC,CAAC;AACzE,OAAO,MAAMS,cAAc,GAAGA,CAAA,MAAO;EAAED,IAAI,EAAEF;AAAoB,CAAC,CAAC;AACnE,OAAO,MAAMI,mBAAmB,GAAIC,GAAG,KAAM;EAC3CH,IAAI,EAAEP,wBAAwB;EAC9BU,GAAG,EAAEA;AACP,CAAC,CAAC;AACF,OAAO,MAAMC,mBAAmB,GAAID,GAAG,KAAM;EAC3CH,IAAI,EAAEN,wBAAwB;EAC9BS,GAAG,EAAEA;AACP,CAAC,CAAC;AACF,OAAO,MAAME,aAAa,GAAIF,GAAG,KAAM;EAAEH,IAAI,EAAEL,kBAAkB;EAAEQ,GAAG,EAAEA;AAAI,CAAC,CAAC;AAC9E,OAAO,MAAMG,aAAa,GAAIH,GAAG,KAAM;EAAEH,IAAI,EAAEJ,kBAAkB;EAAEO,GAAG,EAAEA;AAAI,CAAC,CAAC;AAC9E,OAAO,MAAMI,eAAe,GAAGA,CAAA,MAAO;EAAEP,IAAI,EAAEH;AAAqB,CAAC,CAAC;AAErE,OAAO,MAAMW,QAAQ,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EAC7C,IAAIC,OAAO,GAAG,IAAI;EAElB,KAAK,MAAMC,SAAS,IAAIF,UAAU,EAAE;IAClC,IAAIE,SAAS,CAACZ,IAAI,KAAKR,sBAAsB,EAAE;MAC7CmB,OAAO,GAAGA,OAAO,IAAIF,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC;IAC9C;IAEA,IAAIF,SAAS,CAACZ,IAAI,KAAKP,wBAAwB,EAAE;MAC/CkB,OAAO,GAAGA,OAAO,IAAIF,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,IAAIF,SAAS,CAACT,GAAG;IAC3D;IAEA,IAAIS,SAAS,CAACZ,IAAI,KAAKN,wBAAwB,EAAE;MAC/CiB,OAAO,GAAGA,OAAO,IAAIF,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,IAAIF,SAAS,CAACT,GAAG;IAC3D;IAEA,IAAIS,SAAS,CAACZ,IAAI,KAAKL,kBAAkB,EAAE;MACzCgB,OAAO,GAAGA,OAAO,IAAI,CAACF,KAAK,IAAIG,SAAS,CAACT,GAAG;IAC9C;IAEA,IAAIS,SAAS,CAACZ,IAAI,KAAKJ,kBAAkB,EAAE;MACzCe,OAAO,GAAGA,OAAO,IAAI,CAACF,KAAK,IAAIG,SAAS,CAACT,GAAG;IAC9C;IAEA,IAAIS,SAAS,CAACZ,IAAI,KAAKH,oBAAoB,EAAE;MAC3Cc,OAAO,GAAGA,OAAO,IAAI,gBAAgB,CAACI,IAAI,CAACN,KAAK,CAAC;IACnD;EACF;EAEA,OAAOE,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module"}