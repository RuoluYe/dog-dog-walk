{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeruo\\\\OneDrive - UW\\\\Desktop\\\\free-dog-walk\\\\frontend\\\\src\\\\user\\\\pages\\\\Auth\\\\Auth.js\";\nimport React, { useContext, useState } from \"react\";\nimport Card from \"../../../shared/components/UI/Card/Card\";\nimport Input from \"../../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../../shared/components/FormElements/Button/Button\";\nimport ErrorModal from \"../../../shared/components/UI/ErrorModal/ErrorModal\";\nimport LoadingSpinner from \"../../../shared/components/UI/LoadingSpinner/LoadingSpinner\";\nimport ImageUpload from \"../../../shared/components/FormElements/ImageUpload/ImageUpload\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../../shared/util/validators\";\nimport useForm from \"../../../shared/hooks/form-hook\";\nimport useHttp from \"../../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../../shared/contexts/auth-context\";\nimport classes from \"./Auth.module.css\";\nfunction Auth() {\n  const authContext = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttp();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  async function submitHandler(event) {\n    event.preventDefault();\n    if (isLoginMode) {\n\n      //   try {\n      //     const response = await sendRequest(\n      //       `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n      //       \"POST\",\n      //       JSON.stringify({\n      //         email: formState.inputs.email.value,\n      //         password: formState.inputs.password.value\n      //       }),\n      //       {\n      //         \"Content-Type\": \"application/json\"\n      //       }\n      //     );\n\n      //     if (error) {\n      //       throw new Error(error);\n      //     }\n\n      //     authContext.login(response.userId, response.token);\n      //   } catch (error) {\n      //     console.log(error);\n      //   }\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        console.log(formData);\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/signup`, \"POST\", formData);\n        if (error) {\n          throw new Error(error);\n        }\n        authContext.login(response.userId, response.token);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  function switchAuthModeHandler() {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevState => !prevState);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: classes.authentication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, isLoginMode ? \"Login\" : \"Sign up\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter your name!\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), !isLoginMode && /*#__PURE__*/React.createElement(ImageUpload, {\n    id: \"image\",\n    center: true,\n    onInput: inputHandler,\n    errorText: \"Please provide an image!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address!\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters!\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, isLoginMode ? \"Login\" : \"Sign up\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, isLoginMode ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: switchAuthModeHandler,\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, isLoginMode ? \"Sign up!\" : \"Login!\"))));\n}\nexport default Auth;","map":{"version":3,"names":["React","useContext","useState","Card","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttp","AuthContext","classes","Auth","authContext","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","submitHandler","event","preventDefault","formData","FormData","append","inputs","name","image","console","log","response","process","env","REACT_APP_BACKEND_URL","Error","login","userId","token","switchAuthModeHandler","undefined","prevState","createElement","Fragment","onClear","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","authentication","asOverlay","onSubmit","id","element","type","label","validators","errorText","onInput","center","disabled","onClick","link"],"sources":["C:/Users/yeruo/OneDrive - UW/Desktop/free-dog-walk/frontend/src/user/pages/Auth/Auth.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport Card from \"../../../shared/components/UI/Card/Card\";\nimport Input from \"../../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../../shared/components/FormElements/Button/Button\";\nimport ErrorModal from \"../../../shared/components/UI/ErrorModal/ErrorModal\";\nimport LoadingSpinner from \"../../../shared/components/UI/LoadingSpinner/LoadingSpinner\";\nimport ImageUpload from \"../../../shared/components/FormElements/ImageUpload/ImageUpload\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from \"../../../shared/util/validators\";\nimport useForm from \"../../../shared/hooks/form-hook\";\nimport useHttp from \"../../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../../shared/contexts/auth-context\";\n\nimport classes from \"./Auth.module.css\";\n\nfunction Auth() {\n  const authContext = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttp();\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false\n      },\n      password: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    false\n  );\n\n  async function submitHandler(event) {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      \n    //   try {\n    //     const response = await sendRequest(\n    //       `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n    //       \"POST\",\n    //       JSON.stringify({\n    //         email: formState.inputs.email.value,\n    //         password: formState.inputs.password.value\n    //       }),\n    //       {\n    //         \"Content-Type\": \"application/json\"\n    //       }\n    //     );\n\n    //     if (error) {\n    //       throw new Error(error);\n    //     }\n\n    //     authContext.login(response.userId, response.token);\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    } else {  \n      try {\n        const formData = new FormData();\n\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n\n        console.log(formData);\n\n        const response = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          \"POST\",\n          formData\n        );\n\n        if (error) {\n          throw new Error(error);\n        }\n\n        authContext.login(response.userId, response.token);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    \n  }\n\n  function switchAuthModeHandler() {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n\n    setIsLoginMode((prevState) => !prevState);\n  }\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className={classes.authentication}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>{isLoginMode ? \"Login\" : \"Sign up\"}</h2>\n        <hr />\n        <form onSubmit={submitHandler}>\n          {!isLoginMode && (\n            <Input\n              id=\"name\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter your name!\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              id=\"image\"\n              center\n              onInput={inputHandler}\n              errorText=\"Please provide an image!\"\n            />\n          )}\n          <Input\n            id=\"email\"\n            element=\"input\"\n            type=\"email\"\n            label=\"Email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address!\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password\"\n            element=\"input\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters!\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"Login\" : \"Sign up\"}\n          </Button>\n        </form>\n        <p>\n          {isLoginMode\n            ? \"Don't have an account? \"\n            : \"Already have an account? \"}\n\n          <span onClick={switchAuthModeHandler} className={classes.link}>\n            {isLoginMode ? \"Sign up!\" : \"Login!\"}\n          </span>\n        </p>\n      </Card>\n    </>\n  );\n}\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}