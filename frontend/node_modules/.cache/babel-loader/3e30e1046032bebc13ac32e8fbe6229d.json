{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeruo\\\\OneDrive - UW\\\\Desktop\\\\free-dog-walk\\\\frontend\\\\src\\\\dogs\\\\pages\\\\UpdateDog.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\nimport LoadingSpinner from \"../../shared/components/UI/LoadingSpinner/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UI/ErrorModal/ErrorModal\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport useHttp from \"../../shared/hooks/http-hook\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\nimport classes from \"./DogForm.css\";\nimport Card from \"../../shared/components/UI/Card/Card\";\nfunction UpdateDog() {\n  const history = useHistory();\n  const placeId = useParams().placeId;\n  const authContext = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttp();\n  const [place, setPlace] = useState();\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  });\n  useEffect(() => {\n    async function fetchPlace() {\n      try {\n        const data = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\n        setPlace(data.place);\n        setFormData({\n          title: {\n            value: data.place.title,\n            isValid: true\n          },\n          description: {\n            value: data.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchPlace();\n  }, [setFormData, sendRequest, placeId]);\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n  if (!place && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Couldn't find place!\")));\n  }\n  async function submitHandler(event) {\n    event.preventDefault();\n    try {\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, \"PATCH\", JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value\n      }), {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authContext.token}`\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    history.push(`/${authContext.userId}/places`);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), !isLoading && place && /*#__PURE__*/React.createElement(\"form\", {\n    className: classes[\"place-form\"],\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title!\",\n    initValue: place.title,\n    initValid: true,\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"At least five characters!\",\n    initValue: place.description,\n    initValid: true,\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Update place\")));\n}\nexport default UpdateDog;","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useHistory","Input","Button","LoadingSpinner","ErrorModal","useForm","useHttp","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","AuthContext","classes","Card","UpdateDog","history","placeId","authContext","isLoading","error","sendRequest","clearError","place","setPlace","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","data","process","env","REACT_APP_BACKEND_URL","console","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","submitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Fragment","onClear","onSubmit","id","element","type","label","validators","errorText","initValue","initValid","onInput","disabled"],"sources":["C:/Users/yeruo/OneDrive - UW/Desktop/free-dog-walk/frontend/src/dogs/pages/UpdateDog.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\nimport LoadingSpinner from \"../../shared/components/UI/LoadingSpinner/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UI/ErrorModal/ErrorModal\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport useHttp from \"../../shared/hooks/http-hook\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from \"../../shared/util/validators\";\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\n\nimport classes from \"./DogForm.css\";\nimport Card from \"../../shared/components/UI/Card/Card\";\n\nfunction UpdateDog() {\n  const history = useHistory();\n  const placeId = useParams().placeId;\n  const authContext = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttp();\n  const [place, setPlace] = useState();\n\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  });\n\n  useEffect(() => {\n    async function fetchPlace() {\n      try {\n        const data = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n\n        setPlace(data.place);\n        setFormData(\n          {\n            title: {\n              value: data.place.title,\n              isValid: true\n            },\n            description: {\n              value: data.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchPlace();\n  }, [setFormData, sendRequest, placeId]);\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!place && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Couldn't find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${authContext.token}`\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n\n    history.push(`/${authContext.userId}/places`);\n  }\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && place && (\n        <form className={classes[\"place-form\"]} onSubmit={submitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title!\"\n            initValue={place.title}\n            initValid={true}\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"At least five characters!\"\n            initValue={place.description}\n            initValid={true}\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            Update place\n          </Button>\n        </form>\n      )}\n    </>\n  );\n}\n\nexport default UpdateDog;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AAExD,OAAOC,KAAK,MAAM,kDAAkD;AACpE,OAAOC,MAAM,MAAM,oDAAoD;AACvE,OAAOC,cAAc,MAAM,0DAA0D;AACrF,OAAOC,UAAU,MAAM,kDAAkD;AACzE,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SACEC,mBAAmB,EACnBC,iBAAiB,QACZ,8BAA8B;AACrC,SAASC,WAAW,QAAQ,oCAAoC;AAEhE,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,IAAI,MAAM,sCAAsC;AAEvD,SAASC,SAASA,CAAA,EAAG;EACnB,MAAMC,OAAO,GAAGb,UAAU,CAAC,CAAC;EAC5B,MAAMc,OAAO,GAAGf,SAAS,CAAC,CAAC,CAACe,OAAO;EACnC,MAAMC,WAAW,GAAGjB,UAAU,CAACW,WAAW,CAAC;EAC3C,MAAM;IAAEO,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGb,OAAO,CAAC,CAAC;EAC/D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC;EAEpC,MAAM,CAAC0B,SAAS,EAAEC,YAAY,EAAEC,WAAW,CAAC,GAAGnB,OAAO,CAAC;IACrDoB,KAAK,EAAE;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE;MACXF,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF9B,SAAS,CAAC,MAAM;IACd,eAAegC,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,WAAW,CAC3B,GAAEa,OAAO,CAACC,GAAG,CAACC,qBAAsB,WAAUnB,OAAQ,EACzD,CAAC;QAEDO,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;QACpBI,WAAW,CACT;UACEC,KAAK,EAAE;YACLC,KAAK,EAAEI,IAAI,CAACV,KAAK,CAACK,KAAK;YACvBE,OAAO,EAAE;UACX,CAAC;UACDC,WAAW,EAAE;YACXF,KAAK,EAAEI,IAAI,CAACV,KAAK,CAACQ,WAAW;YAC7BD,OAAO,EAAE;UACX;QACF,CAAC,EACD,IACF,CAAC;MACH,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdiB,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;MACpB;IACF;IAEAY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACL,WAAW,EAAEN,WAAW,EAAEJ,OAAO,CAAC,CAAC;EAEvC,IAAIE,SAAS,EAAE;IACb,oBACErB,KAAA,CAAAyC,aAAA;MAAKC,SAAS,EAAC,QAAQ;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrBhD,KAAA,CAAAyC,aAAA,CAACjC,cAAc;MAAAmC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACd,CAAC;EAEV;EAEA,IAAI,CAACvB,KAAK,IAAI,CAACH,KAAK,EAAE;IACpB,oBACEtB,KAAA,CAAAyC,aAAA;MAAKC,SAAS,EAAC,QAAQ;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrBhD,KAAA,CAAAyC,aAAA,CAACzB,IAAI;MAAA2B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACHhD,KAAA,CAAAyC,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,sBAAwB,CACxB,CACH,CAAC;EAEV;EAEA,eAAeC,aAAaA,CAACC,KAAK,EAAE;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF,MAAM5B,WAAW,CACd,GAAEa,OAAO,CAACC,GAAG,CAACC,qBAAsB,WAAUnB,OAAQ,EAAC,EACxD,OAAO,EACPiC,IAAI,CAACC,SAAS,CAAC;QACbvB,KAAK,EAAEH,SAAS,CAAC2B,MAAM,CAACxB,KAAK,CAACC,KAAK;QACnCE,WAAW,EAAEN,SAAS,CAAC2B,MAAM,CAACrB,WAAW,CAACF;MAC5C,CAAC,CAAC,EACF;QACE,cAAc,EAAE,kBAAkB;QAClCwB,aAAa,EAAG,UAASnC,WAAW,CAACoC,KAAM;MAC7C,CACF,CAAC;IACH,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdiB,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;IACpB;IAEAJ,OAAO,CAACuC,IAAI,CAAE,IAAGrC,WAAW,CAACsC,MAAO,SAAQ,CAAC;EAC/C;EAEA,oBACE1D,KAAA,CAAAyC,aAAA,CAAAzC,KAAA,CAAA2D,QAAA,qBACE3D,KAAA,CAAAyC,aAAA,CAAChC,UAAU;IAACa,KAAK,EAAEA,KAAM;IAACsC,OAAO,EAAEpC,UAAW;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAChD,CAAC3B,SAAS,IAAII,KAAK,iBAClBzB,KAAA,CAAAyC,aAAA;IAAMC,SAAS,EAAE3B,OAAO,CAAC,YAAY,CAAE;IAAC8C,QAAQ,EAAEZ,aAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9DhD,KAAA,CAAAyC,aAAA,CAACnC,KAAK;IACJwD,EAAE,EAAC,OAAO;IACVC,OAAO,EAAC,OAAO;IACfC,IAAI,EAAC,MAAM;IACXC,KAAK,EAAC,OAAO;IACbC,UAAU,EAAE,CAACrD,iBAAiB,CAAC,CAAC,CAAE;IAClCsD,SAAS,EAAC,6BAA6B;IACvCC,SAAS,EAAE3C,KAAK,CAACK,KAAM;IACvBuC,SAAS,EAAE,IAAK;IAChBC,OAAO,EAAE1C,YAAa;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvB,CAAC,eACFhD,KAAA,CAAAyC,aAAA,CAACnC,KAAK;IACJwD,EAAE,EAAC,aAAa;IAChBC,OAAO,EAAC,UAAU;IAClBE,KAAK,EAAC,aAAa;IACnBC,UAAU,EAAE,CAACtD,mBAAmB,CAAC,CAAC,CAAC,CAAE;IACrCuD,SAAS,EAAC,2BAA2B;IACrCC,SAAS,EAAE3C,KAAK,CAACQ,WAAY;IAC7BoC,SAAS,EAAE,IAAK;IAChBC,OAAO,EAAE1C,YAAa;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvB,CAAC,eACFhD,KAAA,CAAAyC,aAAA,CAAClC,MAAM;IAACyD,IAAI,EAAC,QAAQ;IAACO,QAAQ,EAAE,CAAC5C,SAAS,CAACK,OAAQ;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAE5C,CACJ,CAER,CAAC;AAEP;AAEA,eAAe/B,SAAS"},"metadata":{},"sourceType":"module"}